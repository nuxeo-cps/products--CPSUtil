#!/bin/sh

# print the doc if no args
if [ -z $1 ]; then
 cat <<EOF

 Usage: runalltests <path>

 This run all CPS tests from <path> (a Zope instance), 
 exits with code 1 in case of errors

 The standard output will be the path on filesystem of the error log,
 for further processing.

EOF
  exit 0
fi


cd $1
timestamp=`date +%F-%T`
errorlog="/tmp/test_cps-errors-$timestamp.log"
touch $errorlog # for people wanting to tail it right away
echo $errorlog
report="/tmp/test_cps-report"
if [ -f etc/test.conf ]; then
   conffile=etc/test.conf
else
   conffile=etc/zope.conf
fi

EXIT_CODE=0
for prodinit in `ls Products/CPS*/__init__.py`
do
   proddir=`dirname $prodinit`
   prodname=`echo $proddir | cut -d '/' -f 2`
   logfile="/tmp/test_cps-$prodname-$timestamp.log"
   bin/zopectl test --config-file=$conffile --nowarnings --dir $proddir > $logfile 2>/dev/null
   grep "^Total" $logfile > $report

   if [ -s $report ]; then
      analysed=`grep -v "0 failures, 0 errors" ${report}`
   else
      # No summary, happens in case there's no layer tests (e.g, CPSCore)
      grep "Ran [0-9]* tests with" $logfile > $report
      analysed=`grep -v "0 failures and 0 errors" ${report}`
   fi

   if [ ! -s $report ]; then
       EXIT_CODE=1

       import_pbms=`grep -A10 "^Test-modules with import problems" $logfile`
       if [ ! -z "$import_pbms" ];
       then
	   echo "\nIMPORT PROBLEMS FOR $prodname" >> $errorlog
	   echo $import_pbms >> $errorlog
       else
	   echo "\nDON'T UNDERSTAND tests results for $prodname" >> $errorlog
	   cat $logfile >> $errorlog
       fi
   else
       if [ ! -z "$analysed" ]; then
	   EXIT_CODE=1
	   echo "BROKEN TESTS FOR $prodname" >> $errorlog
	   cat $logfile >> $errorlog
       fi
   fi

   rm $report $logfile
done

exit $EXIT_CODE
